var myArray = [1,2,3,4,5] 
var myObject = {
    firstName: "AT",
    lastName: "Tran",
    location: "San Francisco"
}
function each(collection, callback){
    // if collection being passed is an array
    if(Array.isArray(collection)){
        for(var i = 0 ; i < collection.length; i ++){
            callback(collection[i])   
        }
        //else its an object
    } else { 
        for(var prop in collection){
            callback(collection[prop])   
        }
    }
}
each(myArray, console.log)
// logs each number in array, also works for objects

function map(collection, callback){
    var newArray = []
    if(Array.isArray(collection)){
        for( var i = 0 ; i < collection.length; i ++){
            newArray.push(callback(collection[i]))
        }
    } else {
        for(var prop in collection){
            newArray.push(callback(collection[prop], prop))
        }
    }
    return newArray
}
map([1, 2, 3], function(num){ return num * 3; });
//=> [3, 6, 9]
map({one: 1, two: 2, three: 3}, function(num, key){ return num * 3; });
//=> [3, 6, 9]



function reduce(array, callback, accumulator){
    // if the accumulator isnt provided, the sum is the first value in the array
    // then also start the loop at iteration 1 and NOT 0!
    if(accumulator == null){
        var sum = array[0]
        for(var i = 1 ; i < array.length; i ++){
        sum = callback(sum, array[i])
    }
    return sum
    // if the accumulator is provided, then sum is equal to accumulator
    } else {
     var sum = accumulator
     for(var i = 0 ; i < array.length; i ++){
        sum = callback(sum, array[i])
    }
    return sum
    }
}

reduce([1, 2, 3], function(memo, num){ return memo + num;});
//=> 6


function reduceRight(list, callback){
    var newArray = []
    for(var i = list.length -1 ; i>=0; i--){
         newArray = callback(newArray, list[i])   
    }
    return newArray
}
var list = [[0, 1], [2, 3], [4, 5]];
reduceRight(list, function(a, b) { return a.concat(b); }, []);
//=> [4, 5, 2, 3, 0, 1]

function find(array, callback){
    for ( var i = 0 ; i < array.length; i++){
        if(callback(array[i]))
        return array[i]
    }
}
find([1, 2, 3, 4, 5, 6], function(num){ return num % 2 == 0; });
//=> 2

function filter(array, callback){
    var newArray = []
    for(var i = 0 ; i < array.length; i++){
        if(callback(array[i])){
         newArray.push(array[i])   
        }
    }
    return newArray
}
filter([1, 2, 3, 4, 5, 6], function(num){ return num % 2 == 0; });
//=> [2, 4, 6]

var listOfPlays = [
    { title: "blah", author: "fake", year: 1222},
    { title: "Cymbleline", author: "Shakespeare", year: 1611},
    { title: "The Tempest", author: "Shakespeare", year: 1611}
    ]
function equals(object1, object2){
for(var prop in object1){
    if (!(prop in object2)){
        return false
        }
    if(!(object1[prop]==object2[prop])){
        return false
        }
    return true
    }
}
function where(list, object){
    var newArray = []
    for(var i = 0 ; i < list.length; i++){
        if(equals(object, list[i])){
            newArray.push(list[i])
        }
    }
    return newArray
}

where(listOfPlays, {author: "Shakespeare", year: 1611});
//=> [{title: "Cymbeline", author: "Shakespeare", year: 1611},
//   {title: "The Tempest", author: "Shakespeare", year: 1611}]


